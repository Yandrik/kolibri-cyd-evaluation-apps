[package]
name         = "kolibri-cyd-tester-app-embassy"
version      = "0.1.0"
edition      = "2021"
rust-version = "1.76.0"

[[bin]]
name = "firmware"
path = "src/bin/firmware.rs"

[lib]

[dependencies]
display-interface = "0.5.0"
display-interface-spi = "0.5.0"
embassy-embedded-hal = "0.2.0"
# defmt            = "0.3.8"
# defmt-rtt        = "0.4.1"
embassy-executor = { version = "0.6.0",  features = ["log"] }
embassy-sync = "0.6.0"
embassy-time     = { version = "0.3.1",  features = ["generic-queue-8"] }
embedded-graphics = "0.8.1"
embedded-hal = "1.0.0"
esp-backtrace    = { version = "0.14.1", features = ["esp32", "println", "exception-handler", "panic-handler"] }
esp-hal          = { version = "0.20.1", features = ["esp32", "log", "async"] }
esp-hal-embassy  = { version = "0.3.0",  features = ["esp32", "log"] }
esp-println = { version = "0.11.0", features = ["esp32", "log"] }
heapless = { version = "0.8.0", features = ["serde"] }
kolibri-embedded-gui = { git = "https://github.com/Yandrik/kolibri.git", version = "0.0.0-alpha.1" }
mipidsi = "0.8.0"
static_cell      = { version = "2.1.0",  features = ["nightly"] }
xpt2046 = { git = "https://github.com/Yandrik/xpt2046.git", version = "0.3.1" }

[profile.release]
debug         = true  # Debug info is useful, and does not affect the size of the final binary
codegen-units = 1     # LLVM can perform better optimizations using a single thread
lto           = "fat" # Attempt to perform optimizations across all crates within the dependency graph
opt-level     = "s"   # Optimize for binary size, but keep loop vectorization enabled
